# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Create .env file
      run: |
        echo "PORT=${{ secrets.PORT }}" > .env
        echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_LIFETIME=${{ secrets.JWT_LIFETIME }}" >> .env
        echo "FAST2SMS_API_KEY=${{ secrets.FAST2SMS_API_KEY }}" >> .env
        echo "CRYPT_PASSWORD=${{ secrets.CRYPT_PASSWORD }}" >> .env
        echo "CRYPT_IV=${{ secrets.CRYPT_IV }}" >> .env
      env:
        PORT: ${{ secrets.PORT }}
        NODE_ENV: ${{ secrets.NODE_ENV }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_LIFETIME: ${{ secrets.JWT_LIFETIME }}
        FAST2SMS_API_KEY: ${{ secrets.FAST2SMS_API_KEY }}
        CRYPT_PASSWORD: ${{ secrets.CRYPT_PASSWORD }}
        CRYPT_IV: ${{ secrets.CRYPT_IV }}

    - name: Display .env file
      run: cat .env
    - run: npm ci
    - run: npm run build --if-present
    - run: pm2 restart src/app.ts --interpreter /home/ubuntu/.nvm/versions/node/v20.9.0/lib/node_modules/ts-node/dist/bin.js --watch
